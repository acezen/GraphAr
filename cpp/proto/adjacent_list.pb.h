// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: adjacent_list.proto
// Protobuf C++ Version: 5.27.1

#ifndef GOOGLE_PROTOBUF_INCLUDED_adjacent_5flist_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_adjacent_5flist_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5027001
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "enums.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_adjacent_5flist_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_adjacent_5flist_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_adjacent_5flist_2eproto;
namespace graphar {
namespace proto {
class AdjacentList;
struct AdjacentListDefaultTypeInternal;
extern AdjacentListDefaultTypeInternal _AdjacentList_default_instance_;
class AdjacentList_Statistics;
struct AdjacentList_StatisticsDefaultTypeInternal;
extern AdjacentList_StatisticsDefaultTypeInternal _AdjacentList_Statistics_default_instance_;
}  // namespace proto
}  // namespace graphar
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace graphar {
namespace proto {

// ===================================================================


// -------------------------------------------------------------------

class AdjacentList_Statistics final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:graphar.proto.AdjacentList.Statistics) */ {
 public:
  inline AdjacentList_Statistics() : AdjacentList_Statistics(nullptr) {}
  ~AdjacentList_Statistics() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AdjacentList_Statistics(
      ::google::protobuf::internal::ConstantInitialized);

  inline AdjacentList_Statistics(const AdjacentList_Statistics& from) : AdjacentList_Statistics(nullptr, from) {}
  inline AdjacentList_Statistics(AdjacentList_Statistics&& from) noexcept
      : AdjacentList_Statistics(nullptr, std::move(from)) {}
  inline AdjacentList_Statistics& operator=(const AdjacentList_Statistics& from) {
    CopyFrom(from);
    return *this;
  }
  inline AdjacentList_Statistics& operator=(AdjacentList_Statistics&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AdjacentList_Statistics& default_instance() {
    return *internal_default_instance();
  }
  static inline const AdjacentList_Statistics* internal_default_instance() {
    return reinterpret_cast<const AdjacentList_Statistics*>(
        &_AdjacentList_Statistics_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(AdjacentList_Statistics& a, AdjacentList_Statistics& b) { a.Swap(&b); }
  inline void Swap(AdjacentList_Statistics* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AdjacentList_Statistics* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AdjacentList_Statistics* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<AdjacentList_Statistics>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AdjacentList_Statistics& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AdjacentList_Statistics& from) { AdjacentList_Statistics::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(AdjacentList_Statistics* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "graphar.proto.AdjacentList.Statistics"; }

 protected:
  explicit AdjacentList_Statistics(::google::protobuf::Arena* arena);
  AdjacentList_Statistics(::google::protobuf::Arena* arena, const AdjacentList_Statistics& from);
  AdjacentList_Statistics(::google::protobuf::Arena* arena, AdjacentList_Statistics&& from) noexcept
      : AdjacentList_Statistics(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kEdgeNumsOfVertexChunksFieldNumber = 3,
    kNumVerticesFieldNumber = 1,
    kNumVertexChunksFieldNumber = 2,
  };
  // repeated int64 edge_nums_of_vertex_chunks = 3 [json_name = "edgeNumsOfVertexChunks"];
  int edge_nums_of_vertex_chunks_size() const;
  private:
  int _internal_edge_nums_of_vertex_chunks_size() const;

  public:
  void clear_edge_nums_of_vertex_chunks() ;
  ::int64_t edge_nums_of_vertex_chunks(int index) const;
  void set_edge_nums_of_vertex_chunks(int index, ::int64_t value);
  void add_edge_nums_of_vertex_chunks(::int64_t value);
  const ::google::protobuf::RepeatedField<::int64_t>& edge_nums_of_vertex_chunks() const;
  ::google::protobuf::RepeatedField<::int64_t>* mutable_edge_nums_of_vertex_chunks();

  private:
  const ::google::protobuf::RepeatedField<::int64_t>& _internal_edge_nums_of_vertex_chunks() const;
  ::google::protobuf::RepeatedField<::int64_t>* _internal_mutable_edge_nums_of_vertex_chunks();

  public:
  // int64 num_vertices = 1 [json_name = "numVertices"];
  void clear_num_vertices() ;
  ::int64_t num_vertices() const;
  void set_num_vertices(::int64_t value);

  private:
  ::int64_t _internal_num_vertices() const;
  void _internal_set_num_vertices(::int64_t value);

  public:
  // int64 num_vertex_chunks = 2 [json_name = "numVertexChunks"];
  void clear_num_vertex_chunks() ;
  ::int64_t num_vertex_chunks() const;
  void set_num_vertex_chunks(::int64_t value);

  private:
  ::int64_t _internal_num_vertex_chunks() const;
  void _internal_set_num_vertex_chunks(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:graphar.proto.AdjacentList.Statistics)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_AdjacentList_Statistics_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const AdjacentList_Statistics& from_msg);
    ::google::protobuf::RepeatedField<::int64_t> edge_nums_of_vertex_chunks_;
    mutable ::google::protobuf::internal::CachedSize _edge_nums_of_vertex_chunks_cached_byte_size_;
    ::int64_t num_vertices_;
    ::int64_t num_vertex_chunks_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_adjacent_5flist_2eproto;
};
// -------------------------------------------------------------------

class AdjacentList final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:graphar.proto.AdjacentList) */ {
 public:
  inline AdjacentList() : AdjacentList(nullptr) {}
  ~AdjacentList() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AdjacentList(
      ::google::protobuf::internal::ConstantInitialized);

  inline AdjacentList(const AdjacentList& from) : AdjacentList(nullptr, from) {}
  inline AdjacentList(AdjacentList&& from) noexcept
      : AdjacentList(nullptr, std::move(from)) {}
  inline AdjacentList& operator=(const AdjacentList& from) {
    CopyFrom(from);
    return *this;
  }
  inline AdjacentList& operator=(AdjacentList&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AdjacentList& default_instance() {
    return *internal_default_instance();
  }
  static inline const AdjacentList* internal_default_instance() {
    return reinterpret_cast<const AdjacentList*>(
        &_AdjacentList_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(AdjacentList& a, AdjacentList& b) { a.Swap(&b); }
  inline void Swap(AdjacentList* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AdjacentList* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AdjacentList* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<AdjacentList>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AdjacentList& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AdjacentList& from) { AdjacentList::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(AdjacentList* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "graphar.proto.AdjacentList"; }

 protected:
  explicit AdjacentList(::google::protobuf::Arena* arena);
  AdjacentList(::google::protobuf::Arena* arena, const AdjacentList& from);
  AdjacentList(::google::protobuf::Arena* arena, AdjacentList&& from) noexcept
      : AdjacentList(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using Statistics = AdjacentList_Statistics;

  // accessors -------------------------------------------------------
  enum : int {
    kPrefixFieldNumber = 3,
    kStatisticsFieldNumber = 4,
    kTypeFieldNumber = 1,
    kFileTypeFieldNumber = 2,
  };
  // string prefix = 3 [json_name = "prefix"];
  void clear_prefix() ;
  const std::string& prefix() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_prefix(Arg_&& arg, Args_... args);
  std::string* mutable_prefix();
  PROTOBUF_NODISCARD std::string* release_prefix();
  void set_allocated_prefix(std::string* value);

  private:
  const std::string& _internal_prefix() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_prefix(
      const std::string& value);
  std::string* _internal_mutable_prefix();

  public:
  // optional .graphar.proto.AdjacentList.Statistics statistics = 4 [json_name = "statistics"];
  bool has_statistics() const;
  void clear_statistics() ;
  const ::graphar::proto::AdjacentList_Statistics& statistics() const;
  PROTOBUF_NODISCARD ::graphar::proto::AdjacentList_Statistics* release_statistics();
  ::graphar::proto::AdjacentList_Statistics* mutable_statistics();
  void set_allocated_statistics(::graphar::proto::AdjacentList_Statistics* value);
  void unsafe_arena_set_allocated_statistics(::graphar::proto::AdjacentList_Statistics* value);
  ::graphar::proto::AdjacentList_Statistics* unsafe_arena_release_statistics();

  private:
  const ::graphar::proto::AdjacentList_Statistics& _internal_statistics() const;
  ::graphar::proto::AdjacentList_Statistics* _internal_mutable_statistics();

  public:
  // .graphar.proto.AdjListType type = 1 [json_name = "type"];
  void clear_type() ;
  ::graphar::proto::AdjListType type() const;
  void set_type(::graphar::proto::AdjListType value);

  private:
  ::graphar::proto::AdjListType _internal_type() const;
  void _internal_set_type(::graphar::proto::AdjListType value);

  public:
  // .graphar.proto.FileType file_type = 2 [json_name = "fileType"];
  void clear_file_type() ;
  ::graphar::proto::FileType file_type() const;
  void set_file_type(::graphar::proto::FileType value);

  private:
  ::graphar::proto::FileType _internal_file_type() const;
  void _internal_set_file_type(::graphar::proto::FileType value);

  public:
  // @@protoc_insertion_point(class_scope:graphar.proto.AdjacentList)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 1,
      41, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_AdjacentList_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const AdjacentList& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr prefix_;
    ::graphar::proto::AdjacentList_Statistics* statistics_;
    int type_;
    int file_type_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_adjacent_5flist_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// AdjacentList_Statistics

// int64 num_vertices = 1 [json_name = "numVertices"];
inline void AdjacentList_Statistics::clear_num_vertices() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.num_vertices_ = ::int64_t{0};
}
inline ::int64_t AdjacentList_Statistics::num_vertices() const {
  // @@protoc_insertion_point(field_get:graphar.proto.AdjacentList.Statistics.num_vertices)
  return _internal_num_vertices();
}
inline void AdjacentList_Statistics::set_num_vertices(::int64_t value) {
  _internal_set_num_vertices(value);
  // @@protoc_insertion_point(field_set:graphar.proto.AdjacentList.Statistics.num_vertices)
}
inline ::int64_t AdjacentList_Statistics::_internal_num_vertices() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.num_vertices_;
}
inline void AdjacentList_Statistics::_internal_set_num_vertices(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.num_vertices_ = value;
}

// int64 num_vertex_chunks = 2 [json_name = "numVertexChunks"];
inline void AdjacentList_Statistics::clear_num_vertex_chunks() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.num_vertex_chunks_ = ::int64_t{0};
}
inline ::int64_t AdjacentList_Statistics::num_vertex_chunks() const {
  // @@protoc_insertion_point(field_get:graphar.proto.AdjacentList.Statistics.num_vertex_chunks)
  return _internal_num_vertex_chunks();
}
inline void AdjacentList_Statistics::set_num_vertex_chunks(::int64_t value) {
  _internal_set_num_vertex_chunks(value);
  // @@protoc_insertion_point(field_set:graphar.proto.AdjacentList.Statistics.num_vertex_chunks)
}
inline ::int64_t AdjacentList_Statistics::_internal_num_vertex_chunks() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.num_vertex_chunks_;
}
inline void AdjacentList_Statistics::_internal_set_num_vertex_chunks(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.num_vertex_chunks_ = value;
}

// repeated int64 edge_nums_of_vertex_chunks = 3 [json_name = "edgeNumsOfVertexChunks"];
inline int AdjacentList_Statistics::_internal_edge_nums_of_vertex_chunks_size() const {
  return _internal_edge_nums_of_vertex_chunks().size();
}
inline int AdjacentList_Statistics::edge_nums_of_vertex_chunks_size() const {
  return _internal_edge_nums_of_vertex_chunks_size();
}
inline void AdjacentList_Statistics::clear_edge_nums_of_vertex_chunks() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.edge_nums_of_vertex_chunks_.Clear();
}
inline ::int64_t AdjacentList_Statistics::edge_nums_of_vertex_chunks(int index) const {
  // @@protoc_insertion_point(field_get:graphar.proto.AdjacentList.Statistics.edge_nums_of_vertex_chunks)
  return _internal_edge_nums_of_vertex_chunks().Get(index);
}
inline void AdjacentList_Statistics::set_edge_nums_of_vertex_chunks(int index, ::int64_t value) {
  _internal_mutable_edge_nums_of_vertex_chunks()->Set(index, value);
  // @@protoc_insertion_point(field_set:graphar.proto.AdjacentList.Statistics.edge_nums_of_vertex_chunks)
}
inline void AdjacentList_Statistics::add_edge_nums_of_vertex_chunks(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_edge_nums_of_vertex_chunks()->Add(value);
  // @@protoc_insertion_point(field_add:graphar.proto.AdjacentList.Statistics.edge_nums_of_vertex_chunks)
}
inline const ::google::protobuf::RepeatedField<::int64_t>& AdjacentList_Statistics::edge_nums_of_vertex_chunks() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:graphar.proto.AdjacentList.Statistics.edge_nums_of_vertex_chunks)
  return _internal_edge_nums_of_vertex_chunks();
}
inline ::google::protobuf::RepeatedField<::int64_t>* AdjacentList_Statistics::mutable_edge_nums_of_vertex_chunks()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:graphar.proto.AdjacentList.Statistics.edge_nums_of_vertex_chunks)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_edge_nums_of_vertex_chunks();
}
inline const ::google::protobuf::RepeatedField<::int64_t>&
AdjacentList_Statistics::_internal_edge_nums_of_vertex_chunks() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.edge_nums_of_vertex_chunks_;
}
inline ::google::protobuf::RepeatedField<::int64_t>* AdjacentList_Statistics::_internal_mutable_edge_nums_of_vertex_chunks() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.edge_nums_of_vertex_chunks_;
}

// -------------------------------------------------------------------

// AdjacentList

// .graphar.proto.AdjListType type = 1 [json_name = "type"];
inline void AdjacentList::clear_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = 0;
}
inline ::graphar::proto::AdjListType AdjacentList::type() const {
  // @@protoc_insertion_point(field_get:graphar.proto.AdjacentList.type)
  return _internal_type();
}
inline void AdjacentList::set_type(::graphar::proto::AdjListType value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:graphar.proto.AdjacentList.type)
}
inline ::graphar::proto::AdjListType AdjacentList::_internal_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::graphar::proto::AdjListType>(_impl_.type_);
}
inline void AdjacentList::_internal_set_type(::graphar::proto::AdjListType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = value;
}

// .graphar.proto.FileType file_type = 2 [json_name = "fileType"];
inline void AdjacentList::clear_file_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.file_type_ = 0;
}
inline ::graphar::proto::FileType AdjacentList::file_type() const {
  // @@protoc_insertion_point(field_get:graphar.proto.AdjacentList.file_type)
  return _internal_file_type();
}
inline void AdjacentList::set_file_type(::graphar::proto::FileType value) {
  _internal_set_file_type(value);
  // @@protoc_insertion_point(field_set:graphar.proto.AdjacentList.file_type)
}
inline ::graphar::proto::FileType AdjacentList::_internal_file_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::graphar::proto::FileType>(_impl_.file_type_);
}
inline void AdjacentList::_internal_set_file_type(::graphar::proto::FileType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.file_type_ = value;
}

// string prefix = 3 [json_name = "prefix"];
inline void AdjacentList::clear_prefix() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.prefix_.ClearToEmpty();
}
inline const std::string& AdjacentList::prefix() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:graphar.proto.AdjacentList.prefix)
  return _internal_prefix();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AdjacentList::set_prefix(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.prefix_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:graphar.proto.AdjacentList.prefix)
}
inline std::string* AdjacentList::mutable_prefix() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_prefix();
  // @@protoc_insertion_point(field_mutable:graphar.proto.AdjacentList.prefix)
  return _s;
}
inline const std::string& AdjacentList::_internal_prefix() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.prefix_.Get();
}
inline void AdjacentList::_internal_set_prefix(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.prefix_.Set(value, GetArena());
}
inline std::string* AdjacentList::_internal_mutable_prefix() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.prefix_.Mutable( GetArena());
}
inline std::string* AdjacentList::release_prefix() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:graphar.proto.AdjacentList.prefix)
  return _impl_.prefix_.Release();
}
inline void AdjacentList::set_allocated_prefix(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.prefix_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.prefix_.IsDefault()) {
          _impl_.prefix_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:graphar.proto.AdjacentList.prefix)
}

// optional .graphar.proto.AdjacentList.Statistics statistics = 4 [json_name = "statistics"];
inline bool AdjacentList::has_statistics() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.statistics_ != nullptr);
  return value;
}
inline void AdjacentList::clear_statistics() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.statistics_ != nullptr) _impl_.statistics_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::graphar::proto::AdjacentList_Statistics& AdjacentList::_internal_statistics() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::graphar::proto::AdjacentList_Statistics* p = _impl_.statistics_;
  return p != nullptr ? *p : reinterpret_cast<const ::graphar::proto::AdjacentList_Statistics&>(::graphar::proto::_AdjacentList_Statistics_default_instance_);
}
inline const ::graphar::proto::AdjacentList_Statistics& AdjacentList::statistics() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:graphar.proto.AdjacentList.statistics)
  return _internal_statistics();
}
inline void AdjacentList::unsafe_arena_set_allocated_statistics(::graphar::proto::AdjacentList_Statistics* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.statistics_);
  }
  _impl_.statistics_ = reinterpret_cast<::graphar::proto::AdjacentList_Statistics*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:graphar.proto.AdjacentList.statistics)
}
inline ::graphar::proto::AdjacentList_Statistics* AdjacentList::release_statistics() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::graphar::proto::AdjacentList_Statistics* released = _impl_.statistics_;
  _impl_.statistics_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::graphar::proto::AdjacentList_Statistics* AdjacentList::unsafe_arena_release_statistics() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:graphar.proto.AdjacentList.statistics)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::graphar::proto::AdjacentList_Statistics* temp = _impl_.statistics_;
  _impl_.statistics_ = nullptr;
  return temp;
}
inline ::graphar::proto::AdjacentList_Statistics* AdjacentList::_internal_mutable_statistics() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.statistics_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::graphar::proto::AdjacentList_Statistics>(GetArena());
    _impl_.statistics_ = reinterpret_cast<::graphar::proto::AdjacentList_Statistics*>(p);
  }
  return _impl_.statistics_;
}
inline ::graphar::proto::AdjacentList_Statistics* AdjacentList::mutable_statistics() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::graphar::proto::AdjacentList_Statistics* _msg = _internal_mutable_statistics();
  // @@protoc_insertion_point(field_mutable:graphar.proto.AdjacentList.statistics)
  return _msg;
}
inline void AdjacentList::set_allocated_statistics(::graphar::proto::AdjacentList_Statistics* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.statistics_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.statistics_ = reinterpret_cast<::graphar::proto::AdjacentList_Statistics*>(value);
  // @@protoc_insertion_point(field_set_allocated:graphar.proto.AdjacentList.statistics)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
}  // namespace graphar


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_adjacent_5flist_2eproto_2epb_2eh
