// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: property_group.proto
// Protobuf C++ Version: 5.27.1

#include "property_group.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace graphar {
namespace proto {

inline constexpr Property::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        prefix_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        type_{static_cast< ::graphar::proto::DataType >(0)},
        is_primary_key_{false},
        is_nullable_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Property::Property(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PropertyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PropertyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PropertyDefaultTypeInternal() {}
  union {
    Property _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PropertyDefaultTypeInternal _Property_default_instance_;

inline constexpr PropertyGroup::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : properties_{},
        prefix_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        file_type_{static_cast< ::graphar::proto::FileType >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PropertyGroup::PropertyGroup(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PropertyGroupDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PropertyGroupDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PropertyGroupDefaultTypeInternal() {}
  union {
    PropertyGroup _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PropertyGroupDefaultTypeInternal _PropertyGroup_default_instance_;
}  // namespace proto
}  // namespace graphar
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_property_5fgroup_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_property_5fgroup_2eproto = nullptr;
const ::uint32_t
    TableStruct_property_5fgroup_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::graphar::proto::Property, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::graphar::proto::Property, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::graphar::proto::Property, _impl_.type_),
        PROTOBUF_FIELD_OFFSET(::graphar::proto::Property, _impl_.is_primary_key_),
        PROTOBUF_FIELD_OFFSET(::graphar::proto::Property, _impl_.is_nullable_),
        PROTOBUF_FIELD_OFFSET(::graphar::proto::Property, _impl_.prefix_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::graphar::proto::PropertyGroup, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::graphar::proto::PropertyGroup, _impl_.properties_),
        PROTOBUF_FIELD_OFFSET(::graphar::proto::PropertyGroup, _impl_.file_type_),
        PROTOBUF_FIELD_OFFSET(::graphar::proto::PropertyGroup, _impl_.prefix_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::graphar::proto::Property)},
        {13, -1, -1, sizeof(::graphar::proto::PropertyGroup)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::graphar::proto::_Property_default_instance_._instance,
    &::graphar::proto::_PropertyGroup_default_instance_._instance,
};
const char descriptor_table_protodef_property_5fgroup_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\024property_group.proto\022\rgraphar.proto\032\013e"
    "nums.proto\"\252\001\n\010Property\022\022\n\004name\030\001 \001(\tR\004n"
    "ame\022+\n\004type\030\002 \001(\0162\027.graphar.proto.DataTy"
    "peR\004type\022$\n\016is_primary_key\030\003 \001(\010R\014isPrim"
    "aryKey\022\037\n\013is_nullable\030\004 \001(\010R\nisNullable\022"
    "\026\n\006prefix\030\005 \001(\tR\006prefix\"\226\001\n\rPropertyGrou"
    "p\0227\n\nproperties\030\001 \003(\0132\027.graphar.proto.Pr"
    "opertyR\nproperties\0224\n\tfile_type\030\002 \001(\0162\027."
    "graphar.proto.FileTypeR\010fileType\022\026\n\006pref"
    "ix\030\003 \001(\tR\006prefixB\210\001\n\035org.apache.graphar."
    "info.protoB\022PropertyGroupProtoP\001\242\002\003GPX\252\002"
    "\rGraphar.Proto\312\002\rGraphar\\Proto\342\002\031Graphar"
    "\\Proto\\GPBMetadata\352\002\016Graphar::Protob\006pro"
    "to3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_property_5fgroup_2eproto_deps[1] =
    {
        &::descriptor_table_enums_2eproto,
};
static ::absl::once_flag descriptor_table_property_5fgroup_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_property_5fgroup_2eproto = {
    false,
    false,
    523,
    descriptor_table_protodef_property_5fgroup_2eproto,
    "property_group.proto",
    &descriptor_table_property_5fgroup_2eproto_once,
    descriptor_table_property_5fgroup_2eproto_deps,
    1,
    2,
    schemas,
    file_default_instances,
    TableStruct_property_5fgroup_2eproto::offsets,
    file_level_enum_descriptors_property_5fgroup_2eproto,
    file_level_service_descriptors_property_5fgroup_2eproto,
};
namespace graphar {
namespace proto {
// ===================================================================

class Property::_Internal {
 public:
};

Property::Property(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:graphar.proto.Property)
}
inline PROTOBUF_NDEBUG_INLINE Property::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::graphar::proto::Property& from_msg)
      : name_(arena, from.name_),
        prefix_(arena, from.prefix_),
        _cached_size_{0} {}

Property::Property(
    ::google::protobuf::Arena* arena,
    const Property& from)
    : ::google::protobuf::Message(arena) {
  Property* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, type_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, type_),
           offsetof(Impl_, is_nullable_) -
               offsetof(Impl_, type_) +
               sizeof(Impl_::is_nullable_));

  // @@protoc_insertion_point(copy_constructor:graphar.proto.Property)
}
inline PROTOBUF_NDEBUG_INLINE Property::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : name_(arena),
        prefix_(arena),
        _cached_size_{0} {}

inline void Property::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, type_),
           0,
           offsetof(Impl_, is_nullable_) -
               offsetof(Impl_, type_) +
               sizeof(Impl_::is_nullable_));
}
Property::~Property() {
  // @@protoc_insertion_point(destructor:graphar.proto.Property)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Property::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.name_.Destroy();
  _impl_.prefix_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Property::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(Property, _impl_._cached_size_),
              false,
          },
          &Property::MergeImpl,
          &Property::kDescriptorMethods,
          &descriptor_table_property_5fgroup_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 41, 2> Property::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Property_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::graphar::proto::Property>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string name = 1 [json_name = "name"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Property, _impl_.name_)}},
    // .graphar.proto.DataType type = 2 [json_name = "type"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Property, _impl_.type_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Property, _impl_.type_)}},
    // bool is_primary_key = 3 [json_name = "isPrimaryKey"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Property, _impl_.is_primary_key_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(Property, _impl_.is_primary_key_)}},
    // bool is_nullable = 4 [json_name = "isNullable"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Property, _impl_.is_nullable_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(Property, _impl_.is_nullable_)}},
    // string prefix = 5 [json_name = "prefix"];
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(Property, _impl_.prefix_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1 [json_name = "name"];
    {PROTOBUF_FIELD_OFFSET(Property, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .graphar.proto.DataType type = 2 [json_name = "type"];
    {PROTOBUF_FIELD_OFFSET(Property, _impl_.type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // bool is_primary_key = 3 [json_name = "isPrimaryKey"];
    {PROTOBUF_FIELD_OFFSET(Property, _impl_.is_primary_key_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool is_nullable = 4 [json_name = "isNullable"];
    {PROTOBUF_FIELD_OFFSET(Property, _impl_.is_nullable_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string prefix = 5 [json_name = "prefix"];
    {PROTOBUF_FIELD_OFFSET(Property, _impl_.prefix_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\26\4\0\0\0\6\0\0"
    "graphar.proto.Property"
    "name"
    "prefix"
  }},
};

PROTOBUF_NOINLINE void Property::Clear() {
// @@protoc_insertion_point(message_clear_start:graphar.proto.Property)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.prefix_.ClearToEmpty();
  ::memset(&_impl_.type_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.is_nullable_) -
      reinterpret_cast<char*>(&_impl_.type_)) + sizeof(_impl_.is_nullable_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* Property::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:graphar.proto.Property)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "graphar.proto.Property.name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // .graphar.proto.DataType type = 2 [json_name = "type"];
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_type(), target);
  }

  // bool is_primary_key = 3 [json_name = "isPrimaryKey"];
  if (this->_internal_is_primary_key() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        3, this->_internal_is_primary_key(), target);
  }

  // bool is_nullable = 4 [json_name = "isNullable"];
  if (this->_internal_is_nullable() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        4, this->_internal_is_nullable(), target);
  }

  // string prefix = 5 [json_name = "prefix"];
  if (!this->_internal_prefix().empty()) {
    const std::string& _s = this->_internal_prefix();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "graphar.proto.Property.prefix");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:graphar.proto.Property)
  return target;
}

::size_t Property::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:graphar.proto.Property)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  // string prefix = 5 [json_name = "prefix"];
  if (!this->_internal_prefix().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_prefix());
  }

  // .graphar.proto.DataType type = 2 [json_name = "type"];
  if (this->_internal_type() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_type());
  }

  // bool is_primary_key = 3 [json_name = "isPrimaryKey"];
  if (this->_internal_is_primary_key() != 0) {
    total_size += 2;
  }

  // bool is_nullable = 4 [json_name = "isNullable"];
  if (this->_internal_is_nullable() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Property::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Property*>(&to_msg);
  auto& from = static_cast<const Property&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:graphar.proto.Property)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_prefix().empty()) {
    _this->_internal_set_prefix(from._internal_prefix());
  }
  if (from._internal_type() != 0) {
    _this->_impl_.type_ = from._impl_.type_;
  }
  if (from._internal_is_primary_key() != 0) {
    _this->_impl_.is_primary_key_ = from._impl_.is_primary_key_;
  }
  if (from._internal_is_nullable() != 0) {
    _this->_impl_.is_nullable_ = from._impl_.is_nullable_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Property::CopyFrom(const Property& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:graphar.proto.Property)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Property::InternalSwap(Property* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.prefix_, &other->_impl_.prefix_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Property, _impl_.is_nullable_)
      + sizeof(Property::_impl_.is_nullable_)
      - PROTOBUF_FIELD_OFFSET(Property, _impl_.type_)>(
          reinterpret_cast<char*>(&_impl_.type_),
          reinterpret_cast<char*>(&other->_impl_.type_));
}

::google::protobuf::Metadata Property::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PropertyGroup::_Internal {
 public:
};

PropertyGroup::PropertyGroup(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:graphar.proto.PropertyGroup)
}
inline PROTOBUF_NDEBUG_INLINE PropertyGroup::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::graphar::proto::PropertyGroup& from_msg)
      : properties_{visibility, arena, from.properties_},
        prefix_(arena, from.prefix_),
        _cached_size_{0} {}

PropertyGroup::PropertyGroup(
    ::google::protobuf::Arena* arena,
    const PropertyGroup& from)
    : ::google::protobuf::Message(arena) {
  PropertyGroup* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.file_type_ = from._impl_.file_type_;

  // @@protoc_insertion_point(copy_constructor:graphar.proto.PropertyGroup)
}
inline PROTOBUF_NDEBUG_INLINE PropertyGroup::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : properties_{visibility, arena},
        prefix_(arena),
        _cached_size_{0} {}

inline void PropertyGroup::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.file_type_ = {};
}
PropertyGroup::~PropertyGroup() {
  // @@protoc_insertion_point(destructor:graphar.proto.PropertyGroup)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PropertyGroup::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.prefix_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
PropertyGroup::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(PropertyGroup, _impl_._cached_size_),
              false,
          },
          &PropertyGroup::MergeImpl,
          &PropertyGroup::kDescriptorMethods,
          &descriptor_table_property_5fgroup_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 42, 2> PropertyGroup::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_PropertyGroup_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::graphar::proto::PropertyGroup>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .graphar.proto.Property properties = 1 [json_name = "properties"];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PropertyGroup, _impl_.properties_)}},
    // .graphar.proto.FileType file_type = 2 [json_name = "fileType"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PropertyGroup, _impl_.file_type_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(PropertyGroup, _impl_.file_type_)}},
    // string prefix = 3 [json_name = "prefix"];
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(PropertyGroup, _impl_.prefix_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .graphar.proto.Property properties = 1 [json_name = "properties"];
    {PROTOBUF_FIELD_OFFSET(PropertyGroup, _impl_.properties_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .graphar.proto.FileType file_type = 2 [json_name = "fileType"];
    {PROTOBUF_FIELD_OFFSET(PropertyGroup, _impl_.file_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string prefix = 3 [json_name = "prefix"];
    {PROTOBUF_FIELD_OFFSET(PropertyGroup, _impl_.prefix_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::graphar::proto::Property>()},
  }}, {{
    "\33\0\0\6\0\0\0\0"
    "graphar.proto.PropertyGroup"
    "prefix"
  }},
};

PROTOBUF_NOINLINE void PropertyGroup::Clear() {
// @@protoc_insertion_point(message_clear_start:graphar.proto.PropertyGroup)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.properties_.Clear();
  _impl_.prefix_.ClearToEmpty();
  _impl_.file_type_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* PropertyGroup::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:graphar.proto.PropertyGroup)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .graphar.proto.Property properties = 1 [json_name = "properties"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_properties_size());
       i < n; i++) {
    const auto& repfield = this->_internal_properties().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // .graphar.proto.FileType file_type = 2 [json_name = "fileType"];
  if (this->_internal_file_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_file_type(), target);
  }

  // string prefix = 3 [json_name = "prefix"];
  if (!this->_internal_prefix().empty()) {
    const std::string& _s = this->_internal_prefix();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "graphar.proto.PropertyGroup.prefix");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:graphar.proto.PropertyGroup)
  return target;
}

::size_t PropertyGroup::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:graphar.proto.PropertyGroup)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated .graphar.proto.Property properties = 1 [json_name = "properties"];
  total_size += 1UL * this->_internal_properties_size();
  for (const auto& msg : this->_internal_properties()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // string prefix = 3 [json_name = "prefix"];
  if (!this->_internal_prefix().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_prefix());
  }

  // .graphar.proto.FileType file_type = 2 [json_name = "fileType"];
  if (this->_internal_file_type() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_file_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void PropertyGroup::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PropertyGroup*>(&to_msg);
  auto& from = static_cast<const PropertyGroup&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:graphar.proto.PropertyGroup)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_properties()->MergeFrom(
      from._internal_properties());
  if (!from._internal_prefix().empty()) {
    _this->_internal_set_prefix(from._internal_prefix());
  }
  if (from._internal_file_type() != 0) {
    _this->_impl_.file_type_ = from._impl_.file_type_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PropertyGroup::CopyFrom(const PropertyGroup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:graphar.proto.PropertyGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PropertyGroup::InternalSwap(PropertyGroup* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.properties_.InternalSwap(&other->_impl_.properties_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.prefix_, &other->_impl_.prefix_, arena);
  swap(_impl_.file_type_, other->_impl_.file_type_);
}

::google::protobuf::Metadata PropertyGroup::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
}  // namespace graphar
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_property_5fgroup_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
