// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: graph_info.proto
// Protobuf C++ Version: 5.27.1

#include "graph_info.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace graphar {
namespace proto {

inline constexpr GraphInfo_Statistics::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : num_vertices_{::int64_t{0}},
        num_edges_{::int64_t{0}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GraphInfo_Statistics::GraphInfo_Statistics(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GraphInfo_StatisticsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GraphInfo_StatisticsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GraphInfo_StatisticsDefaultTypeInternal() {}
  union {
    GraphInfo_Statistics _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GraphInfo_StatisticsDefaultTypeInternal _GraphInfo_Statistics_default_instance_;

inline constexpr GraphInfo_KeyValue::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : key_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        value_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GraphInfo_KeyValue::GraphInfo_KeyValue(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GraphInfo_KeyValueDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GraphInfo_KeyValueDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GraphInfo_KeyValueDefaultTypeInternal() {}
  union {
    GraphInfo_KeyValue _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GraphInfo_KeyValueDefaultTypeInternal _GraphInfo_KeyValue_default_instance_;

inline constexpr GraphInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        vertices_{},
        edges_{},
        key_value_metadata_{},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        prefix_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        statistics_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR GraphInfo::GraphInfo(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GraphInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GraphInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GraphInfoDefaultTypeInternal() {}
  union {
    GraphInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GraphInfoDefaultTypeInternal _GraphInfo_default_instance_;
}  // namespace proto
}  // namespace graphar
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_graph_5finfo_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_graph_5finfo_2eproto = nullptr;
const ::uint32_t
    TableStruct_graph_5finfo_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::graphar::proto::GraphInfo_Statistics, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::graphar::proto::GraphInfo_Statistics, _impl_.num_vertices_),
        PROTOBUF_FIELD_OFFSET(::graphar::proto::GraphInfo_Statistics, _impl_.num_edges_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::graphar::proto::GraphInfo_KeyValue, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::graphar::proto::GraphInfo_KeyValue, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::graphar::proto::GraphInfo_KeyValue, _impl_.value_),
        PROTOBUF_FIELD_OFFSET(::graphar::proto::GraphInfo, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::graphar::proto::GraphInfo, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::graphar::proto::GraphInfo, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::graphar::proto::GraphInfo, _impl_.vertices_),
        PROTOBUF_FIELD_OFFSET(::graphar::proto::GraphInfo, _impl_.edges_),
        PROTOBUF_FIELD_OFFSET(::graphar::proto::GraphInfo, _impl_.prefix_),
        PROTOBUF_FIELD_OFFSET(::graphar::proto::GraphInfo, _impl_.statistics_),
        PROTOBUF_FIELD_OFFSET(::graphar::proto::GraphInfo, _impl_.key_value_metadata_),
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        0,
        ~0u,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::graphar::proto::GraphInfo_Statistics)},
        {10, -1, -1, sizeof(::graphar::proto::GraphInfo_KeyValue)},
        {20, 34, -1, sizeof(::graphar::proto::GraphInfo)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::graphar::proto::_GraphInfo_Statistics_default_instance_._instance,
    &::graphar::proto::_GraphInfo_KeyValue_default_instance_._instance,
    &::graphar::proto::_GraphInfo_default_instance_._instance,
};
const char descriptor_table_protodef_graph_5finfo_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\020graph_info.proto\022\rgraphar.proto\032\021verte"
    "x_info.proto\032\017edge_info.proto\"\311\003\n\tGraphI"
    "nfo\022\022\n\004name\030\001 \001(\tR\004name\0225\n\010vertices\030\002 \003("
    "\0132\031.graphar.proto.VertexInfoR\010vertices\022-"
    "\n\005edges\030\003 \003(\0132\027.graphar.proto.EdgeInfoR\005"
    "edges\022\026\n\006prefix\030\004 \001(\tR\006prefix\022H\n\nstatist"
    "ics\030\005 \001(\0132#.graphar.proto.GraphInfo.Stat"
    "isticsH\000R\nstatistics\210\001\001\022O\n\022key_value_met"
    "adata\030\006 \003(\0132!.graphar.proto.GraphInfo.Ke"
    "yValueR\020keyValueMetadata\032L\n\nStatistics\022!"
    "\n\014num_vertices\030\001 \001(\003R\013numVertices\022\033\n\tnum"
    "_edges\030\002 \001(\003R\010numEdges\0322\n\010KeyValue\022\020\n\003ke"
    "y\030\001 \001(\tR\003key\022\024\n\005value\030\002 \001(\tR\005valueB\r\n\013_s"
    "tatisticsB\204\001\n\035org.apache.graphar.info.pr"
    "otoB\016GraphInfoProtoP\001\242\002\003GPX\252\002\rGraphar.Pr"
    "oto\312\002\rGraphar\\Proto\342\002\031Graphar\\Proto\\GPBM"
    "etadata\352\002\016Graphar::Protob\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_graph_5finfo_2eproto_deps[2] =
    {
        &::descriptor_table_edge_5finfo_2eproto,
        &::descriptor_table_vertex_5finfo_2eproto,
};
static ::absl::once_flag descriptor_table_graph_5finfo_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_graph_5finfo_2eproto = {
    false,
    false,
    672,
    descriptor_table_protodef_graph_5finfo_2eproto,
    "graph_info.proto",
    &descriptor_table_graph_5finfo_2eproto_once,
    descriptor_table_graph_5finfo_2eproto_deps,
    2,
    3,
    schemas,
    file_default_instances,
    TableStruct_graph_5finfo_2eproto::offsets,
    file_level_enum_descriptors_graph_5finfo_2eproto,
    file_level_service_descriptors_graph_5finfo_2eproto,
};
namespace graphar {
namespace proto {
// ===================================================================

class GraphInfo_Statistics::_Internal {
 public:
};

GraphInfo_Statistics::GraphInfo_Statistics(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:graphar.proto.GraphInfo.Statistics)
}
GraphInfo_Statistics::GraphInfo_Statistics(
    ::google::protobuf::Arena* arena, const GraphInfo_Statistics& from)
    : GraphInfo_Statistics(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE GraphInfo_Statistics::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void GraphInfo_Statistics::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, num_vertices_),
           0,
           offsetof(Impl_, num_edges_) -
               offsetof(Impl_, num_vertices_) +
               sizeof(Impl_::num_edges_));
}
GraphInfo_Statistics::~GraphInfo_Statistics() {
  // @@protoc_insertion_point(destructor:graphar.proto.GraphInfo.Statistics)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GraphInfo_Statistics::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
GraphInfo_Statistics::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(GraphInfo_Statistics, _impl_._cached_size_),
              false,
          },
          &GraphInfo_Statistics::MergeImpl,
          &GraphInfo_Statistics::kDescriptorMethods,
          &descriptor_table_graph_5finfo_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> GraphInfo_Statistics::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_GraphInfo_Statistics_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::graphar::proto::GraphInfo_Statistics>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int64 num_edges = 2 [json_name = "numEdges"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(GraphInfo_Statistics, _impl_.num_edges_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(GraphInfo_Statistics, _impl_.num_edges_)}},
    // int64 num_vertices = 1 [json_name = "numVertices"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(GraphInfo_Statistics, _impl_.num_vertices_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(GraphInfo_Statistics, _impl_.num_vertices_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 num_vertices = 1 [json_name = "numVertices"];
    {PROTOBUF_FIELD_OFFSET(GraphInfo_Statistics, _impl_.num_vertices_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int64 num_edges = 2 [json_name = "numEdges"];
    {PROTOBUF_FIELD_OFFSET(GraphInfo_Statistics, _impl_.num_edges_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void GraphInfo_Statistics::Clear() {
// @@protoc_insertion_point(message_clear_start:graphar.proto.GraphInfo.Statistics)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.num_vertices_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.num_edges_) -
      reinterpret_cast<char*>(&_impl_.num_vertices_)) + sizeof(_impl_.num_edges_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* GraphInfo_Statistics::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:graphar.proto.GraphInfo.Statistics)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int64 num_vertices = 1 [json_name = "numVertices"];
  if (this->_internal_num_vertices() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<1>(
            stream, this->_internal_num_vertices(), target);
  }

  // int64 num_edges = 2 [json_name = "numEdges"];
  if (this->_internal_num_edges() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<2>(
            stream, this->_internal_num_edges(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:graphar.proto.GraphInfo.Statistics)
  return target;
}

::size_t GraphInfo_Statistics::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:graphar.proto.GraphInfo.Statistics)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // int64 num_vertices = 1 [json_name = "numVertices"];
  if (this->_internal_num_vertices() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_num_vertices());
  }

  // int64 num_edges = 2 [json_name = "numEdges"];
  if (this->_internal_num_edges() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_num_edges());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void GraphInfo_Statistics::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GraphInfo_Statistics*>(&to_msg);
  auto& from = static_cast<const GraphInfo_Statistics&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:graphar.proto.GraphInfo.Statistics)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_num_vertices() != 0) {
    _this->_impl_.num_vertices_ = from._impl_.num_vertices_;
  }
  if (from._internal_num_edges() != 0) {
    _this->_impl_.num_edges_ = from._impl_.num_edges_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GraphInfo_Statistics::CopyFrom(const GraphInfo_Statistics& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:graphar.proto.GraphInfo.Statistics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GraphInfo_Statistics::InternalSwap(GraphInfo_Statistics* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GraphInfo_Statistics, _impl_.num_edges_)
      + sizeof(GraphInfo_Statistics::_impl_.num_edges_)
      - PROTOBUF_FIELD_OFFSET(GraphInfo_Statistics, _impl_.num_vertices_)>(
          reinterpret_cast<char*>(&_impl_.num_vertices_),
          reinterpret_cast<char*>(&other->_impl_.num_vertices_));
}

::google::protobuf::Metadata GraphInfo_Statistics::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GraphInfo_KeyValue::_Internal {
 public:
};

GraphInfo_KeyValue::GraphInfo_KeyValue(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:graphar.proto.GraphInfo.KeyValue)
}
inline PROTOBUF_NDEBUG_INLINE GraphInfo_KeyValue::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::graphar::proto::GraphInfo_KeyValue& from_msg)
      : key_(arena, from.key_),
        value_(arena, from.value_),
        _cached_size_{0} {}

GraphInfo_KeyValue::GraphInfo_KeyValue(
    ::google::protobuf::Arena* arena,
    const GraphInfo_KeyValue& from)
    : ::google::protobuf::Message(arena) {
  GraphInfo_KeyValue* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:graphar.proto.GraphInfo.KeyValue)
}
inline PROTOBUF_NDEBUG_INLINE GraphInfo_KeyValue::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : key_(arena),
        value_(arena),
        _cached_size_{0} {}

inline void GraphInfo_KeyValue::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GraphInfo_KeyValue::~GraphInfo_KeyValue() {
  // @@protoc_insertion_point(destructor:graphar.proto.GraphInfo.KeyValue)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GraphInfo_KeyValue::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.key_.Destroy();
  _impl_.value_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
GraphInfo_KeyValue::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(GraphInfo_KeyValue, _impl_._cached_size_),
              false,
          },
          &GraphInfo_KeyValue::MergeImpl,
          &GraphInfo_KeyValue::kDescriptorMethods,
          &descriptor_table_graph_5finfo_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 49, 2> GraphInfo_KeyValue::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_GraphInfo_KeyValue_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::graphar::proto::GraphInfo_KeyValue>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2 [json_name = "value"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(GraphInfo_KeyValue, _impl_.value_)}},
    // string key = 1 [json_name = "key"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GraphInfo_KeyValue, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1 [json_name = "key"];
    {PROTOBUF_FIELD_OFFSET(GraphInfo_KeyValue, _impl_.key_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2 [json_name = "value"];
    {PROTOBUF_FIELD_OFFSET(GraphInfo_KeyValue, _impl_.value_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\40\3\5\0\0\0\0\0"
    "graphar.proto.GraphInfo.KeyValue"
    "key"
    "value"
  }},
};

PROTOBUF_NOINLINE void GraphInfo_KeyValue::Clear() {
// @@protoc_insertion_point(message_clear_start:graphar.proto.GraphInfo.KeyValue)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.key_.ClearToEmpty();
  _impl_.value_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* GraphInfo_KeyValue::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:graphar.proto.GraphInfo.KeyValue)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string key = 1 [json_name = "key"];
  if (!this->_internal_key().empty()) {
    const std::string& _s = this->_internal_key();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "graphar.proto.GraphInfo.KeyValue.key");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string value = 2 [json_name = "value"];
  if (!this->_internal_value().empty()) {
    const std::string& _s = this->_internal_value();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "graphar.proto.GraphInfo.KeyValue.value");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:graphar.proto.GraphInfo.KeyValue)
  return target;
}

::size_t GraphInfo_KeyValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:graphar.proto.GraphInfo.KeyValue)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // string key = 1 [json_name = "key"];
  if (!this->_internal_key().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_key());
  }

  // string value = 2 [json_name = "value"];
  if (!this->_internal_value().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_value());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void GraphInfo_KeyValue::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GraphInfo_KeyValue*>(&to_msg);
  auto& from = static_cast<const GraphInfo_KeyValue&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:graphar.proto.GraphInfo.KeyValue)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_key().empty()) {
    _this->_internal_set_key(from._internal_key());
  }
  if (!from._internal_value().empty()) {
    _this->_internal_set_value(from._internal_value());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GraphInfo_KeyValue::CopyFrom(const GraphInfo_KeyValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:graphar.proto.GraphInfo.KeyValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GraphInfo_KeyValue::InternalSwap(GraphInfo_KeyValue* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.key_, &other->_impl_.key_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.value_, &other->_impl_.value_, arena);
}

::google::protobuf::Metadata GraphInfo_KeyValue::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GraphInfo::_Internal {
 public:
  using HasBits =
      decltype(std::declval<GraphInfo>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GraphInfo, _impl_._has_bits_);
};

void GraphInfo::clear_vertices() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.vertices_.Clear();
}
void GraphInfo::clear_edges() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.edges_.Clear();
}
GraphInfo::GraphInfo(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:graphar.proto.GraphInfo)
}
inline PROTOBUF_NDEBUG_INLINE GraphInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::graphar::proto::GraphInfo& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        vertices_{visibility, arena, from.vertices_},
        edges_{visibility, arena, from.edges_},
        key_value_metadata_{visibility, arena, from.key_value_metadata_},
        name_(arena, from.name_),
        prefix_(arena, from.prefix_) {}

GraphInfo::GraphInfo(
    ::google::protobuf::Arena* arena,
    const GraphInfo& from)
    : ::google::protobuf::Message(arena) {
  GraphInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.statistics_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::graphar::proto::GraphInfo_Statistics>(
                              arena, *from._impl_.statistics_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:graphar.proto.GraphInfo)
}
inline PROTOBUF_NDEBUG_INLINE GraphInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        vertices_{visibility, arena},
        edges_{visibility, arena},
        key_value_metadata_{visibility, arena},
        name_(arena),
        prefix_(arena) {}

inline void GraphInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.statistics_ = {};
}
GraphInfo::~GraphInfo() {
  // @@protoc_insertion_point(destructor:graphar.proto.GraphInfo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GraphInfo::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.name_.Destroy();
  _impl_.prefix_.Destroy();
  delete _impl_.statistics_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
GraphInfo::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(GraphInfo, _impl_._cached_size_),
              false,
          },
          &GraphInfo::MergeImpl,
          &GraphInfo::kDescriptorMethods,
          &descriptor_table_graph_5finfo_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 4, 42, 2> GraphInfo::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GraphInfo, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_GraphInfo_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::graphar::proto::GraphInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string name = 1 [json_name = "name"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GraphInfo, _impl_.name_)}},
    // repeated .graphar.proto.VertexInfo vertices = 2 [json_name = "vertices"];
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(GraphInfo, _impl_.vertices_)}},
    // repeated .graphar.proto.EdgeInfo edges = 3 [json_name = "edges"];
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 1, PROTOBUF_FIELD_OFFSET(GraphInfo, _impl_.edges_)}},
    // string prefix = 4 [json_name = "prefix"];
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(GraphInfo, _impl_.prefix_)}},
    // optional .graphar.proto.GraphInfo.Statistics statistics = 5 [json_name = "statistics"];
    {::_pbi::TcParser::FastMtS1,
     {42, 0, 2, PROTOBUF_FIELD_OFFSET(GraphInfo, _impl_.statistics_)}},
    // repeated .graphar.proto.GraphInfo.KeyValue key_value_metadata = 6 [json_name = "keyValueMetadata"];
    {::_pbi::TcParser::FastMtR1,
     {50, 63, 3, PROTOBUF_FIELD_OFFSET(GraphInfo, _impl_.key_value_metadata_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1 [json_name = "name"];
    {PROTOBUF_FIELD_OFFSET(GraphInfo, _impl_.name_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .graphar.proto.VertexInfo vertices = 2 [json_name = "vertices"];
    {PROTOBUF_FIELD_OFFSET(GraphInfo, _impl_.vertices_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .graphar.proto.EdgeInfo edges = 3 [json_name = "edges"];
    {PROTOBUF_FIELD_OFFSET(GraphInfo, _impl_.edges_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // string prefix = 4 [json_name = "prefix"];
    {PROTOBUF_FIELD_OFFSET(GraphInfo, _impl_.prefix_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional .graphar.proto.GraphInfo.Statistics statistics = 5 [json_name = "statistics"];
    {PROTOBUF_FIELD_OFFSET(GraphInfo, _impl_.statistics_), _Internal::kHasBitsOffset + 0, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .graphar.proto.GraphInfo.KeyValue key_value_metadata = 6 [json_name = "keyValueMetadata"];
    {PROTOBUF_FIELD_OFFSET(GraphInfo, _impl_.key_value_metadata_), -1, 3,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::graphar::proto::VertexInfo>()},
    {::_pbi::TcParser::GetTable<::graphar::proto::EdgeInfo>()},
    {::_pbi::TcParser::GetTable<::graphar::proto::GraphInfo_Statistics>()},
    {::_pbi::TcParser::GetTable<::graphar::proto::GraphInfo_KeyValue>()},
  }}, {{
    "\27\4\0\0\6\0\0\0"
    "graphar.proto.GraphInfo"
    "name"
    "prefix"
  }},
};

PROTOBUF_NOINLINE void GraphInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:graphar.proto.GraphInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.vertices_.Clear();
  _impl_.edges_.Clear();
  _impl_.key_value_metadata_.Clear();
  _impl_.name_.ClearToEmpty();
  _impl_.prefix_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.statistics_ != nullptr);
    _impl_.statistics_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* GraphInfo::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:graphar.proto.GraphInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "graphar.proto.GraphInfo.name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // repeated .graphar.proto.VertexInfo vertices = 2 [json_name = "vertices"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_vertices_size());
       i < n; i++) {
    const auto& repfield = this->_internal_vertices().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            2, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // repeated .graphar.proto.EdgeInfo edges = 3 [json_name = "edges"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_edges_size());
       i < n; i++) {
    const auto& repfield = this->_internal_edges().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            3, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // string prefix = 4 [json_name = "prefix"];
  if (!this->_internal_prefix().empty()) {
    const std::string& _s = this->_internal_prefix();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "graphar.proto.GraphInfo.prefix");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .graphar.proto.GraphInfo.Statistics statistics = 5 [json_name = "statistics"];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, *_impl_.statistics_, _impl_.statistics_->GetCachedSize(), target, stream);
  }

  // repeated .graphar.proto.GraphInfo.KeyValue key_value_metadata = 6 [json_name = "keyValueMetadata"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_key_value_metadata_size());
       i < n; i++) {
    const auto& repfield = this->_internal_key_value_metadata().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            6, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:graphar.proto.GraphInfo)
  return target;
}

::size_t GraphInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:graphar.proto.GraphInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated .graphar.proto.VertexInfo vertices = 2 [json_name = "vertices"];
  total_size += 1UL * this->_internal_vertices_size();
  for (const auto& msg : this->_internal_vertices()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .graphar.proto.EdgeInfo edges = 3 [json_name = "edges"];
  total_size += 1UL * this->_internal_edges_size();
  for (const auto& msg : this->_internal_edges()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .graphar.proto.GraphInfo.KeyValue key_value_metadata = 6 [json_name = "keyValueMetadata"];
  total_size += 1UL * this->_internal_key_value_metadata_size();
  for (const auto& msg : this->_internal_key_value_metadata()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  // string prefix = 4 [json_name = "prefix"];
  if (!this->_internal_prefix().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_prefix());
  }

  // optional .graphar.proto.GraphInfo.Statistics statistics = 5 [json_name = "statistics"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.statistics_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void GraphInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GraphInfo*>(&to_msg);
  auto& from = static_cast<const GraphInfo&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:graphar.proto.GraphInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_vertices()->MergeFrom(
      from._internal_vertices());
  _this->_internal_mutable_edges()->MergeFrom(
      from._internal_edges());
  _this->_internal_mutable_key_value_metadata()->MergeFrom(
      from._internal_key_value_metadata());
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_prefix().empty()) {
    _this->_internal_set_prefix(from._internal_prefix());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.statistics_ != nullptr);
    if (_this->_impl_.statistics_ == nullptr) {
      _this->_impl_.statistics_ =
          ::google::protobuf::Message::CopyConstruct<::graphar::proto::GraphInfo_Statistics>(arena, *from._impl_.statistics_);
    } else {
      _this->_impl_.statistics_->MergeFrom(*from._impl_.statistics_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GraphInfo::CopyFrom(const GraphInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:graphar.proto.GraphInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GraphInfo::InternalSwap(GraphInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.vertices_.InternalSwap(&other->_impl_.vertices_);
  _impl_.edges_.InternalSwap(&other->_impl_.edges_);
  _impl_.key_value_metadata_.InternalSwap(&other->_impl_.key_value_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.prefix_, &other->_impl_.prefix_, arena);
  swap(_impl_.statistics_, other->_impl_.statistics_);
}

::google::protobuf::Metadata GraphInfo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
}  // namespace graphar
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_graph_5finfo_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
