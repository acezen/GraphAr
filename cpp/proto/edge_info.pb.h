// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: edge_info.proto
// Protobuf C++ Version: 5.27.1

#ifndef GOOGLE_PROTOBUF_INCLUDED_edge_5finfo_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_edge_5finfo_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5027001
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "property_group.pb.h"
#include "adjacent_list.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_edge_5finfo_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_edge_5finfo_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_edge_5finfo_2eproto;
namespace graphar {
namespace proto {
class EdgeInfo;
struct EdgeInfoDefaultTypeInternal;
extern EdgeInfoDefaultTypeInternal _EdgeInfo_default_instance_;
class EdgeInfo_Statistics;
struct EdgeInfo_StatisticsDefaultTypeInternal;
extern EdgeInfo_StatisticsDefaultTypeInternal _EdgeInfo_Statistics_default_instance_;
}  // namespace proto
}  // namespace graphar
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace graphar {
namespace proto {

// ===================================================================


// -------------------------------------------------------------------

class EdgeInfo_Statistics final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:graphar.proto.EdgeInfo.Statistics) */ {
 public:
  inline EdgeInfo_Statistics() : EdgeInfo_Statistics(nullptr) {}
  ~EdgeInfo_Statistics() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR EdgeInfo_Statistics(
      ::google::protobuf::internal::ConstantInitialized);

  inline EdgeInfo_Statistics(const EdgeInfo_Statistics& from) : EdgeInfo_Statistics(nullptr, from) {}
  inline EdgeInfo_Statistics(EdgeInfo_Statistics&& from) noexcept
      : EdgeInfo_Statistics(nullptr, std::move(from)) {}
  inline EdgeInfo_Statistics& operator=(const EdgeInfo_Statistics& from) {
    CopyFrom(from);
    return *this;
  }
  inline EdgeInfo_Statistics& operator=(EdgeInfo_Statistics&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EdgeInfo_Statistics& default_instance() {
    return *internal_default_instance();
  }
  static inline const EdgeInfo_Statistics* internal_default_instance() {
    return reinterpret_cast<const EdgeInfo_Statistics*>(
        &_EdgeInfo_Statistics_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(EdgeInfo_Statistics& a, EdgeInfo_Statistics& b) { a.Swap(&b); }
  inline void Swap(EdgeInfo_Statistics* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EdgeInfo_Statistics* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EdgeInfo_Statistics* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<EdgeInfo_Statistics>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const EdgeInfo_Statistics& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const EdgeInfo_Statistics& from) { EdgeInfo_Statistics::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(EdgeInfo_Statistics* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "graphar.proto.EdgeInfo.Statistics"; }

 protected:
  explicit EdgeInfo_Statistics(::google::protobuf::Arena* arena);
  EdgeInfo_Statistics(::google::protobuf::Arena* arena, const EdgeInfo_Statistics& from);
  EdgeInfo_Statistics(::google::protobuf::Arena* arena, EdgeInfo_Statistics&& from) noexcept
      : EdgeInfo_Statistics(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNumEdgesFieldNumber = 1,
    kNumSourceVerticesFieldNumber = 2,
    kNumDestinationVerticesFieldNumber = 3,
  };
  // int64 num_edges = 1 [json_name = "numEdges"];
  void clear_num_edges() ;
  ::int64_t num_edges() const;
  void set_num_edges(::int64_t value);

  private:
  ::int64_t _internal_num_edges() const;
  void _internal_set_num_edges(::int64_t value);

  public:
  // int64 num_source_vertices = 2 [json_name = "numSourceVertices"];
  void clear_num_source_vertices() ;
  ::int64_t num_source_vertices() const;
  void set_num_source_vertices(::int64_t value);

  private:
  ::int64_t _internal_num_source_vertices() const;
  void _internal_set_num_source_vertices(::int64_t value);

  public:
  // int64 num_destination_vertices = 3 [json_name = "numDestinationVertices"];
  void clear_num_destination_vertices() ;
  ::int64_t num_destination_vertices() const;
  void set_num_destination_vertices(::int64_t value);

  private:
  ::int64_t _internal_num_destination_vertices() const;
  void _internal_set_num_destination_vertices(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:graphar.proto.EdgeInfo.Statistics)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_EdgeInfo_Statistics_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const EdgeInfo_Statistics& from_msg);
    ::int64_t num_edges_;
    ::int64_t num_source_vertices_;
    ::int64_t num_destination_vertices_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_edge_5finfo_2eproto;
};
// -------------------------------------------------------------------

class EdgeInfo final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:graphar.proto.EdgeInfo) */ {
 public:
  inline EdgeInfo() : EdgeInfo(nullptr) {}
  ~EdgeInfo() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR EdgeInfo(
      ::google::protobuf::internal::ConstantInitialized);

  inline EdgeInfo(const EdgeInfo& from) : EdgeInfo(nullptr, from) {}
  inline EdgeInfo(EdgeInfo&& from) noexcept
      : EdgeInfo(nullptr, std::move(from)) {}
  inline EdgeInfo& operator=(const EdgeInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline EdgeInfo& operator=(EdgeInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EdgeInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const EdgeInfo* internal_default_instance() {
    return reinterpret_cast<const EdgeInfo*>(
        &_EdgeInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(EdgeInfo& a, EdgeInfo& b) { a.Swap(&b); }
  inline void Swap(EdgeInfo* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EdgeInfo* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EdgeInfo* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<EdgeInfo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const EdgeInfo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const EdgeInfo& from) { EdgeInfo::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(EdgeInfo* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "graphar.proto.EdgeInfo"; }

 protected:
  explicit EdgeInfo(::google::protobuf::Arena* arena);
  EdgeInfo(::google::protobuf::Arena* arena, const EdgeInfo& from);
  EdgeInfo(::google::protobuf::Arena* arena, EdgeInfo&& from) noexcept
      : EdgeInfo(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using Statistics = EdgeInfo_Statistics;

  // accessors -------------------------------------------------------
  enum : int {
    kAdjacentListFieldNumber = 7,
    kPropertiesFieldNumber = 8,
    kTypeFieldNumber = 1,
    kSourceVertexTypeFieldNumber = 2,
    kDestinationVertexTypeFieldNumber = 3,
    kPrefixFieldNumber = 10,
    kStatisticsFieldNumber = 11,
    kChunkSizeFieldNumber = 4,
    kSourceVertexChunkSizeFieldNumber = 5,
    kDestinationVertexChunkSizeFieldNumber = 6,
    kIsDirectedFieldNumber = 9,
  };
  // repeated .graphar.proto.AdjacentList adjacent_list = 7 [json_name = "adjacentList"];
  int adjacent_list_size() const;
  private:
  int _internal_adjacent_list_size() const;

  public:
  void clear_adjacent_list() ;
  ::graphar::proto::AdjacentList* mutable_adjacent_list(int index);
  ::google::protobuf::RepeatedPtrField<::graphar::proto::AdjacentList>* mutable_adjacent_list();

  private:
  const ::google::protobuf::RepeatedPtrField<::graphar::proto::AdjacentList>& _internal_adjacent_list() const;
  ::google::protobuf::RepeatedPtrField<::graphar::proto::AdjacentList>* _internal_mutable_adjacent_list();
  public:
  const ::graphar::proto::AdjacentList& adjacent_list(int index) const;
  ::graphar::proto::AdjacentList* add_adjacent_list();
  const ::google::protobuf::RepeatedPtrField<::graphar::proto::AdjacentList>& adjacent_list() const;
  // repeated .graphar.proto.PropertyGroup properties = 8 [json_name = "properties"];
  int properties_size() const;
  private:
  int _internal_properties_size() const;

  public:
  void clear_properties() ;
  ::graphar::proto::PropertyGroup* mutable_properties(int index);
  ::google::protobuf::RepeatedPtrField<::graphar::proto::PropertyGroup>* mutable_properties();

  private:
  const ::google::protobuf::RepeatedPtrField<::graphar::proto::PropertyGroup>& _internal_properties() const;
  ::google::protobuf::RepeatedPtrField<::graphar::proto::PropertyGroup>* _internal_mutable_properties();
  public:
  const ::graphar::proto::PropertyGroup& properties(int index) const;
  ::graphar::proto::PropertyGroup* add_properties();
  const ::google::protobuf::RepeatedPtrField<::graphar::proto::PropertyGroup>& properties() const;
  // string type = 1 [json_name = "type"];
  void clear_type() ;
  const std::string& type() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_type(Arg_&& arg, Args_... args);
  std::string* mutable_type();
  PROTOBUF_NODISCARD std::string* release_type();
  void set_allocated_type(std::string* value);

  private:
  const std::string& _internal_type() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_type(
      const std::string& value);
  std::string* _internal_mutable_type();

  public:
  // string source_vertex_type = 2 [json_name = "sourceVertexType"];
  void clear_source_vertex_type() ;
  const std::string& source_vertex_type() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_source_vertex_type(Arg_&& arg, Args_... args);
  std::string* mutable_source_vertex_type();
  PROTOBUF_NODISCARD std::string* release_source_vertex_type();
  void set_allocated_source_vertex_type(std::string* value);

  private:
  const std::string& _internal_source_vertex_type() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_source_vertex_type(
      const std::string& value);
  std::string* _internal_mutable_source_vertex_type();

  public:
  // string destination_vertex_type = 3 [json_name = "destinationVertexType"];
  void clear_destination_vertex_type() ;
  const std::string& destination_vertex_type() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_destination_vertex_type(Arg_&& arg, Args_... args);
  std::string* mutable_destination_vertex_type();
  PROTOBUF_NODISCARD std::string* release_destination_vertex_type();
  void set_allocated_destination_vertex_type(std::string* value);

  private:
  const std::string& _internal_destination_vertex_type() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_destination_vertex_type(
      const std::string& value);
  std::string* _internal_mutable_destination_vertex_type();

  public:
  // string prefix = 10 [json_name = "prefix"];
  void clear_prefix() ;
  const std::string& prefix() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_prefix(Arg_&& arg, Args_... args);
  std::string* mutable_prefix();
  PROTOBUF_NODISCARD std::string* release_prefix();
  void set_allocated_prefix(std::string* value);

  private:
  const std::string& _internal_prefix() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_prefix(
      const std::string& value);
  std::string* _internal_mutable_prefix();

  public:
  // optional .graphar.proto.EdgeInfo.Statistics statistics = 11 [json_name = "statistics"];
  bool has_statistics() const;
  void clear_statistics() ;
  const ::graphar::proto::EdgeInfo_Statistics& statistics() const;
  PROTOBUF_NODISCARD ::graphar::proto::EdgeInfo_Statistics* release_statistics();
  ::graphar::proto::EdgeInfo_Statistics* mutable_statistics();
  void set_allocated_statistics(::graphar::proto::EdgeInfo_Statistics* value);
  void unsafe_arena_set_allocated_statistics(::graphar::proto::EdgeInfo_Statistics* value);
  ::graphar::proto::EdgeInfo_Statistics* unsafe_arena_release_statistics();

  private:
  const ::graphar::proto::EdgeInfo_Statistics& _internal_statistics() const;
  ::graphar::proto::EdgeInfo_Statistics* _internal_mutable_statistics();

  public:
  // int64 chunk_size = 4 [json_name = "chunkSize"];
  void clear_chunk_size() ;
  ::int64_t chunk_size() const;
  void set_chunk_size(::int64_t value);

  private:
  ::int64_t _internal_chunk_size() const;
  void _internal_set_chunk_size(::int64_t value);

  public:
  // int64 source_vertex_chunk_size = 5 [json_name = "sourceVertexChunkSize"];
  void clear_source_vertex_chunk_size() ;
  ::int64_t source_vertex_chunk_size() const;
  void set_source_vertex_chunk_size(::int64_t value);

  private:
  ::int64_t _internal_source_vertex_chunk_size() const;
  void _internal_set_source_vertex_chunk_size(::int64_t value);

  public:
  // int64 destination_vertex_chunk_size = 6 [json_name = "destinationVertexChunkSize"];
  void clear_destination_vertex_chunk_size() ;
  ::int64_t destination_vertex_chunk_size() const;
  void set_destination_vertex_chunk_size(::int64_t value);

  private:
  ::int64_t _internal_destination_vertex_chunk_size() const;
  void _internal_set_destination_vertex_chunk_size(::int64_t value);

  public:
  // bool is_directed = 9 [json_name = "isDirected"];
  void clear_is_directed() ;
  bool is_directed() const;
  void set_is_directed(bool value);

  private:
  bool _internal_is_directed() const;
  void _internal_set_is_directed(bool value);

  public:
  // @@protoc_insertion_point(class_scope:graphar.proto.EdgeInfo)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 11, 3,
      90, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_EdgeInfo_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const EdgeInfo& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::graphar::proto::AdjacentList > adjacent_list_;
    ::google::protobuf::RepeatedPtrField< ::graphar::proto::PropertyGroup > properties_;
    ::google::protobuf::internal::ArenaStringPtr type_;
    ::google::protobuf::internal::ArenaStringPtr source_vertex_type_;
    ::google::protobuf::internal::ArenaStringPtr destination_vertex_type_;
    ::google::protobuf::internal::ArenaStringPtr prefix_;
    ::graphar::proto::EdgeInfo_Statistics* statistics_;
    ::int64_t chunk_size_;
    ::int64_t source_vertex_chunk_size_;
    ::int64_t destination_vertex_chunk_size_;
    bool is_directed_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_edge_5finfo_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// EdgeInfo_Statistics

// int64 num_edges = 1 [json_name = "numEdges"];
inline void EdgeInfo_Statistics::clear_num_edges() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.num_edges_ = ::int64_t{0};
}
inline ::int64_t EdgeInfo_Statistics::num_edges() const {
  // @@protoc_insertion_point(field_get:graphar.proto.EdgeInfo.Statistics.num_edges)
  return _internal_num_edges();
}
inline void EdgeInfo_Statistics::set_num_edges(::int64_t value) {
  _internal_set_num_edges(value);
  // @@protoc_insertion_point(field_set:graphar.proto.EdgeInfo.Statistics.num_edges)
}
inline ::int64_t EdgeInfo_Statistics::_internal_num_edges() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.num_edges_;
}
inline void EdgeInfo_Statistics::_internal_set_num_edges(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.num_edges_ = value;
}

// int64 num_source_vertices = 2 [json_name = "numSourceVertices"];
inline void EdgeInfo_Statistics::clear_num_source_vertices() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.num_source_vertices_ = ::int64_t{0};
}
inline ::int64_t EdgeInfo_Statistics::num_source_vertices() const {
  // @@protoc_insertion_point(field_get:graphar.proto.EdgeInfo.Statistics.num_source_vertices)
  return _internal_num_source_vertices();
}
inline void EdgeInfo_Statistics::set_num_source_vertices(::int64_t value) {
  _internal_set_num_source_vertices(value);
  // @@protoc_insertion_point(field_set:graphar.proto.EdgeInfo.Statistics.num_source_vertices)
}
inline ::int64_t EdgeInfo_Statistics::_internal_num_source_vertices() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.num_source_vertices_;
}
inline void EdgeInfo_Statistics::_internal_set_num_source_vertices(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.num_source_vertices_ = value;
}

// int64 num_destination_vertices = 3 [json_name = "numDestinationVertices"];
inline void EdgeInfo_Statistics::clear_num_destination_vertices() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.num_destination_vertices_ = ::int64_t{0};
}
inline ::int64_t EdgeInfo_Statistics::num_destination_vertices() const {
  // @@protoc_insertion_point(field_get:graphar.proto.EdgeInfo.Statistics.num_destination_vertices)
  return _internal_num_destination_vertices();
}
inline void EdgeInfo_Statistics::set_num_destination_vertices(::int64_t value) {
  _internal_set_num_destination_vertices(value);
  // @@protoc_insertion_point(field_set:graphar.proto.EdgeInfo.Statistics.num_destination_vertices)
}
inline ::int64_t EdgeInfo_Statistics::_internal_num_destination_vertices() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.num_destination_vertices_;
}
inline void EdgeInfo_Statistics::_internal_set_num_destination_vertices(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.num_destination_vertices_ = value;
}

// -------------------------------------------------------------------

// EdgeInfo

// string type = 1 [json_name = "type"];
inline void EdgeInfo::clear_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_.ClearToEmpty();
}
inline const std::string& EdgeInfo::type() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:graphar.proto.EdgeInfo.type)
  return _internal_type();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void EdgeInfo::set_type(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:graphar.proto.EdgeInfo.type)
}
inline std::string* EdgeInfo::mutable_type() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_type();
  // @@protoc_insertion_point(field_mutable:graphar.proto.EdgeInfo.type)
  return _s;
}
inline const std::string& EdgeInfo::_internal_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.type_.Get();
}
inline void EdgeInfo::_internal_set_type(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_.Set(value, GetArena());
}
inline std::string* EdgeInfo::_internal_mutable_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.type_.Mutable( GetArena());
}
inline std::string* EdgeInfo::release_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:graphar.proto.EdgeInfo.type)
  return _impl_.type_.Release();
}
inline void EdgeInfo::set_allocated_type(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.type_.IsDefault()) {
          _impl_.type_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:graphar.proto.EdgeInfo.type)
}

// string source_vertex_type = 2 [json_name = "sourceVertexType"];
inline void EdgeInfo::clear_source_vertex_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_vertex_type_.ClearToEmpty();
}
inline const std::string& EdgeInfo::source_vertex_type() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:graphar.proto.EdgeInfo.source_vertex_type)
  return _internal_source_vertex_type();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void EdgeInfo::set_source_vertex_type(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_vertex_type_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:graphar.proto.EdgeInfo.source_vertex_type)
}
inline std::string* EdgeInfo::mutable_source_vertex_type() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_source_vertex_type();
  // @@protoc_insertion_point(field_mutable:graphar.proto.EdgeInfo.source_vertex_type)
  return _s;
}
inline const std::string& EdgeInfo::_internal_source_vertex_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.source_vertex_type_.Get();
}
inline void EdgeInfo::_internal_set_source_vertex_type(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_vertex_type_.Set(value, GetArena());
}
inline std::string* EdgeInfo::_internal_mutable_source_vertex_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.source_vertex_type_.Mutable( GetArena());
}
inline std::string* EdgeInfo::release_source_vertex_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:graphar.proto.EdgeInfo.source_vertex_type)
  return _impl_.source_vertex_type_.Release();
}
inline void EdgeInfo::set_allocated_source_vertex_type(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_vertex_type_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.source_vertex_type_.IsDefault()) {
          _impl_.source_vertex_type_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:graphar.proto.EdgeInfo.source_vertex_type)
}

// string destination_vertex_type = 3 [json_name = "destinationVertexType"];
inline void EdgeInfo::clear_destination_vertex_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.destination_vertex_type_.ClearToEmpty();
}
inline const std::string& EdgeInfo::destination_vertex_type() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:graphar.proto.EdgeInfo.destination_vertex_type)
  return _internal_destination_vertex_type();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void EdgeInfo::set_destination_vertex_type(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.destination_vertex_type_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:graphar.proto.EdgeInfo.destination_vertex_type)
}
inline std::string* EdgeInfo::mutable_destination_vertex_type() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_destination_vertex_type();
  // @@protoc_insertion_point(field_mutable:graphar.proto.EdgeInfo.destination_vertex_type)
  return _s;
}
inline const std::string& EdgeInfo::_internal_destination_vertex_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.destination_vertex_type_.Get();
}
inline void EdgeInfo::_internal_set_destination_vertex_type(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.destination_vertex_type_.Set(value, GetArena());
}
inline std::string* EdgeInfo::_internal_mutable_destination_vertex_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.destination_vertex_type_.Mutable( GetArena());
}
inline std::string* EdgeInfo::release_destination_vertex_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:graphar.proto.EdgeInfo.destination_vertex_type)
  return _impl_.destination_vertex_type_.Release();
}
inline void EdgeInfo::set_allocated_destination_vertex_type(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.destination_vertex_type_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.destination_vertex_type_.IsDefault()) {
          _impl_.destination_vertex_type_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:graphar.proto.EdgeInfo.destination_vertex_type)
}

// int64 chunk_size = 4 [json_name = "chunkSize"];
inline void EdgeInfo::clear_chunk_size() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chunk_size_ = ::int64_t{0};
}
inline ::int64_t EdgeInfo::chunk_size() const {
  // @@protoc_insertion_point(field_get:graphar.proto.EdgeInfo.chunk_size)
  return _internal_chunk_size();
}
inline void EdgeInfo::set_chunk_size(::int64_t value) {
  _internal_set_chunk_size(value);
  // @@protoc_insertion_point(field_set:graphar.proto.EdgeInfo.chunk_size)
}
inline ::int64_t EdgeInfo::_internal_chunk_size() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.chunk_size_;
}
inline void EdgeInfo::_internal_set_chunk_size(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chunk_size_ = value;
}

// int64 source_vertex_chunk_size = 5 [json_name = "sourceVertexChunkSize"];
inline void EdgeInfo::clear_source_vertex_chunk_size() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_vertex_chunk_size_ = ::int64_t{0};
}
inline ::int64_t EdgeInfo::source_vertex_chunk_size() const {
  // @@protoc_insertion_point(field_get:graphar.proto.EdgeInfo.source_vertex_chunk_size)
  return _internal_source_vertex_chunk_size();
}
inline void EdgeInfo::set_source_vertex_chunk_size(::int64_t value) {
  _internal_set_source_vertex_chunk_size(value);
  // @@protoc_insertion_point(field_set:graphar.proto.EdgeInfo.source_vertex_chunk_size)
}
inline ::int64_t EdgeInfo::_internal_source_vertex_chunk_size() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.source_vertex_chunk_size_;
}
inline void EdgeInfo::_internal_set_source_vertex_chunk_size(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_vertex_chunk_size_ = value;
}

// int64 destination_vertex_chunk_size = 6 [json_name = "destinationVertexChunkSize"];
inline void EdgeInfo::clear_destination_vertex_chunk_size() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.destination_vertex_chunk_size_ = ::int64_t{0};
}
inline ::int64_t EdgeInfo::destination_vertex_chunk_size() const {
  // @@protoc_insertion_point(field_get:graphar.proto.EdgeInfo.destination_vertex_chunk_size)
  return _internal_destination_vertex_chunk_size();
}
inline void EdgeInfo::set_destination_vertex_chunk_size(::int64_t value) {
  _internal_set_destination_vertex_chunk_size(value);
  // @@protoc_insertion_point(field_set:graphar.proto.EdgeInfo.destination_vertex_chunk_size)
}
inline ::int64_t EdgeInfo::_internal_destination_vertex_chunk_size() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.destination_vertex_chunk_size_;
}
inline void EdgeInfo::_internal_set_destination_vertex_chunk_size(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.destination_vertex_chunk_size_ = value;
}

// repeated .graphar.proto.AdjacentList adjacent_list = 7 [json_name = "adjacentList"];
inline int EdgeInfo::_internal_adjacent_list_size() const {
  return _internal_adjacent_list().size();
}
inline int EdgeInfo::adjacent_list_size() const {
  return _internal_adjacent_list_size();
}
inline ::graphar::proto::AdjacentList* EdgeInfo::mutable_adjacent_list(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:graphar.proto.EdgeInfo.adjacent_list)
  return _internal_mutable_adjacent_list()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::graphar::proto::AdjacentList>* EdgeInfo::mutable_adjacent_list()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:graphar.proto.EdgeInfo.adjacent_list)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_adjacent_list();
}
inline const ::graphar::proto::AdjacentList& EdgeInfo::adjacent_list(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:graphar.proto.EdgeInfo.adjacent_list)
  return _internal_adjacent_list().Get(index);
}
inline ::graphar::proto::AdjacentList* EdgeInfo::add_adjacent_list() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::graphar::proto::AdjacentList* _add = _internal_mutable_adjacent_list()->Add();
  // @@protoc_insertion_point(field_add:graphar.proto.EdgeInfo.adjacent_list)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::graphar::proto::AdjacentList>& EdgeInfo::adjacent_list() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:graphar.proto.EdgeInfo.adjacent_list)
  return _internal_adjacent_list();
}
inline const ::google::protobuf::RepeatedPtrField<::graphar::proto::AdjacentList>&
EdgeInfo::_internal_adjacent_list() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.adjacent_list_;
}
inline ::google::protobuf::RepeatedPtrField<::graphar::proto::AdjacentList>*
EdgeInfo::_internal_mutable_adjacent_list() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.adjacent_list_;
}

// repeated .graphar.proto.PropertyGroup properties = 8 [json_name = "properties"];
inline int EdgeInfo::_internal_properties_size() const {
  return _internal_properties().size();
}
inline int EdgeInfo::properties_size() const {
  return _internal_properties_size();
}
inline ::graphar::proto::PropertyGroup* EdgeInfo::mutable_properties(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:graphar.proto.EdgeInfo.properties)
  return _internal_mutable_properties()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::graphar::proto::PropertyGroup>* EdgeInfo::mutable_properties()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:graphar.proto.EdgeInfo.properties)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_properties();
}
inline const ::graphar::proto::PropertyGroup& EdgeInfo::properties(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:graphar.proto.EdgeInfo.properties)
  return _internal_properties().Get(index);
}
inline ::graphar::proto::PropertyGroup* EdgeInfo::add_properties() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::graphar::proto::PropertyGroup* _add = _internal_mutable_properties()->Add();
  // @@protoc_insertion_point(field_add:graphar.proto.EdgeInfo.properties)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::graphar::proto::PropertyGroup>& EdgeInfo::properties() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:graphar.proto.EdgeInfo.properties)
  return _internal_properties();
}
inline const ::google::protobuf::RepeatedPtrField<::graphar::proto::PropertyGroup>&
EdgeInfo::_internal_properties() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.properties_;
}
inline ::google::protobuf::RepeatedPtrField<::graphar::proto::PropertyGroup>*
EdgeInfo::_internal_mutable_properties() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.properties_;
}

// bool is_directed = 9 [json_name = "isDirected"];
inline void EdgeInfo::clear_is_directed() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_directed_ = false;
}
inline bool EdgeInfo::is_directed() const {
  // @@protoc_insertion_point(field_get:graphar.proto.EdgeInfo.is_directed)
  return _internal_is_directed();
}
inline void EdgeInfo::set_is_directed(bool value) {
  _internal_set_is_directed(value);
  // @@protoc_insertion_point(field_set:graphar.proto.EdgeInfo.is_directed)
}
inline bool EdgeInfo::_internal_is_directed() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.is_directed_;
}
inline void EdgeInfo::_internal_set_is_directed(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_directed_ = value;
}

// string prefix = 10 [json_name = "prefix"];
inline void EdgeInfo::clear_prefix() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.prefix_.ClearToEmpty();
}
inline const std::string& EdgeInfo::prefix() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:graphar.proto.EdgeInfo.prefix)
  return _internal_prefix();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void EdgeInfo::set_prefix(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.prefix_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:graphar.proto.EdgeInfo.prefix)
}
inline std::string* EdgeInfo::mutable_prefix() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_prefix();
  // @@protoc_insertion_point(field_mutable:graphar.proto.EdgeInfo.prefix)
  return _s;
}
inline const std::string& EdgeInfo::_internal_prefix() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.prefix_.Get();
}
inline void EdgeInfo::_internal_set_prefix(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.prefix_.Set(value, GetArena());
}
inline std::string* EdgeInfo::_internal_mutable_prefix() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.prefix_.Mutable( GetArena());
}
inline std::string* EdgeInfo::release_prefix() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:graphar.proto.EdgeInfo.prefix)
  return _impl_.prefix_.Release();
}
inline void EdgeInfo::set_allocated_prefix(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.prefix_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.prefix_.IsDefault()) {
          _impl_.prefix_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:graphar.proto.EdgeInfo.prefix)
}

// optional .graphar.proto.EdgeInfo.Statistics statistics = 11 [json_name = "statistics"];
inline bool EdgeInfo::has_statistics() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.statistics_ != nullptr);
  return value;
}
inline void EdgeInfo::clear_statistics() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.statistics_ != nullptr) _impl_.statistics_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::graphar::proto::EdgeInfo_Statistics& EdgeInfo::_internal_statistics() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::graphar::proto::EdgeInfo_Statistics* p = _impl_.statistics_;
  return p != nullptr ? *p : reinterpret_cast<const ::graphar::proto::EdgeInfo_Statistics&>(::graphar::proto::_EdgeInfo_Statistics_default_instance_);
}
inline const ::graphar::proto::EdgeInfo_Statistics& EdgeInfo::statistics() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:graphar.proto.EdgeInfo.statistics)
  return _internal_statistics();
}
inline void EdgeInfo::unsafe_arena_set_allocated_statistics(::graphar::proto::EdgeInfo_Statistics* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.statistics_);
  }
  _impl_.statistics_ = reinterpret_cast<::graphar::proto::EdgeInfo_Statistics*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:graphar.proto.EdgeInfo.statistics)
}
inline ::graphar::proto::EdgeInfo_Statistics* EdgeInfo::release_statistics() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::graphar::proto::EdgeInfo_Statistics* released = _impl_.statistics_;
  _impl_.statistics_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::graphar::proto::EdgeInfo_Statistics* EdgeInfo::unsafe_arena_release_statistics() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:graphar.proto.EdgeInfo.statistics)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::graphar::proto::EdgeInfo_Statistics* temp = _impl_.statistics_;
  _impl_.statistics_ = nullptr;
  return temp;
}
inline ::graphar::proto::EdgeInfo_Statistics* EdgeInfo::_internal_mutable_statistics() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.statistics_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::graphar::proto::EdgeInfo_Statistics>(GetArena());
    _impl_.statistics_ = reinterpret_cast<::graphar::proto::EdgeInfo_Statistics*>(p);
  }
  return _impl_.statistics_;
}
inline ::graphar::proto::EdgeInfo_Statistics* EdgeInfo::mutable_statistics() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::graphar::proto::EdgeInfo_Statistics* _msg = _internal_mutable_statistics();
  // @@protoc_insertion_point(field_mutable:graphar.proto.EdgeInfo.statistics)
  return _msg;
}
inline void EdgeInfo::set_allocated_statistics(::graphar::proto::EdgeInfo_Statistics* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.statistics_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.statistics_ = reinterpret_cast<::graphar::proto::EdgeInfo_Statistics*>(value);
  // @@protoc_insertion_point(field_set_allocated:graphar.proto.EdgeInfo.statistics)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
}  // namespace graphar


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_edge_5finfo_2eproto_2epb_2eh
